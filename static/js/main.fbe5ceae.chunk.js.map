{"version":3,"sources":["components/Header/Header.jsx","components/Header/index.js","actions/index.js","constants/ActionTypes.js","components/Textarea/index.js","components/Textarea/Textarea.jsx","constants/constants.js","components/BtnSelectAll/BtnSelectAll.jsx","components/BtnSelectAll/index.js","components/BtnDelete/index.js","components/BtnDelete/BtnDelete.jsx","components/ItemTaskList/index.js","components/ItemTaskList/ItemTaskList.jsx","constants/constantsFunc.js","components/TaskList/index.js","components/TaskList/TaskList.jsx","selectors/index.js","containers/TaskList.js","components/Main/index.js","components/Main/Main.jsx","containers/Main.js","components/App/App.jsx","components/App/index.js","reducers/ToDoListQuickly.js","reducers/ToDoListUsual.js","reducers/index.js","index.js"],"names":["Header","className","addTodo","task","type","deleteTodo","id","editTodo","text","completeTodo","completeAllTodos","updateListQuickly","list","updateListUsual","taskTransfer","Textarea","handleKeyPress","e","props","itemId","target","value","keyCode","preventDefault","test","title","completed","wrap","placeholder","onKeyDown","this","Component","BtnSelectAll","isAllChecked","classActive","onClick","String","fromCharCode","BtnDelete","handleClickBtn","onClickDelete","ItemTaskList","state","idEdit","valueBeforeEdit","handleClickCheckbox","todolist","trim","setState","handleInputBlur","handleInputChange","handleDoubleClick","isEdit","Fragment","autoFocus","onChange","onBlur","checked","htmlFor","onDoubleClick","reorder","startIndex","endIndex","result","Array","from","splice","removed","TaskList","quicklyList","usualList","actions","quicklyListItem","map","item","index","key","draggableId","toString","provided","snapshot","isDragging","ref","innerRef","draggableProps","dragHandleProps","usualListItem","getList","emptyListText","onDragEnd","source","destination","droppableId","items","droppableSource","droppableDestination","sourceClone","destClone","move","droppable2","droppable1","droppableProps","length","getTodosUsual","todoUsual","getcountActiveItem","createSelector","filter","itemList","isCheckedExists","getCurrentId","todoQuickly","maxtodoUsual","reduce","acc","curr","maxtodoQuickly","Math","max","connect","todoList","countActiveItem","dispatch","bindActionCreators","TodoActions","Main","isOpen","currentId","App","initialState","localStorage","getItem","JSON","parse","combineReducers","action","todo","areAllMarked","every","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbe5ceae.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Header() {\n  return (\n    <h1 className=\"headline\">todos</h1>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import * as types from '../constants/ActionTypes';\n\nexport const addTodo = task => ({ type: types.ADD_TODO, task });\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id });\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text });\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id });\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS });\nexport const updateListQuickly = list => ({ type: types.UPDATE_LIST_QUICKLY, list });\nexport const updateListUsual = list => ({ type: types.UPDATE_LIST_USUAL, list });\nexport const taskTransfer = task => ({ type: types.TASK_TRANSFER, task });\n\n","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS';\nexport const UPDATE_LIST_USUAL = 'UPDATE_LIST_USUAL';\nexport const UPDATE_LIST_QUICKLY = 'UPDATE_LIST_QUICKLY';\nexport const TASK_TRANSFER = 'TASK_TRANSFER';\n\n","import Textarea from './Textarea';\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTER_KEY_CODE } from '../../constants/constants';\nimport './style.css';\n\nclass Textarea extends Component {\n  handleKeyPress = (e) => {\n    const { addTodo, itemId } = this.props;\n    const text = e.target.value;\n    if (e.keyCode === ENTER_KEY_CODE) {\n      e.preventDefault();\n      if (text !== '' && /\\S/.test(text)) {\n        e.target.value = '';\n        const task = { id: itemId + 1, title: text, completed: false };\n        addTodo(task);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <textarea\n        wrap=\"off\"\n        className=\"main__input-area\"\n        placeholder=\"What needs to be done?\"\n        onKeyDown={this.handleKeyPress}\n      />\n    );\n  }\n}\n\nTextarea.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  itemId: PropTypes.number.isRequired,\n};\n\nexport default Textarea;\n","export const ENTER_KEY_CODE = 13;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nfunction BtnSelectAll(props) {\n  const { isAllChecked, completeAllTodos } = props;\n  const classActive = isAllChecked ? 'active' : '';\n  return (\n    <div className={`checked-items ${classActive}`} onClick={completeAllTodos}>{String.fromCharCode(709)}</div>\n  );\n}\n\nBtnSelectAll.propTypes = {\n  isAllChecked: PropTypes.bool.isRequired,\n  completeAllTodos: PropTypes.func.isRequired,\n};\n\nexport default BtnSelectAll;\n","import BtnSelectAll from './BtnSelectAll';\n\nexport default BtnSelectAll;\n","import BtnDelete from './BtnDelete';\n\nexport default BtnDelete;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nclass BtnDelete extends Component {\n  handleClickBtn = () => {\n    const { onClickDelete, id } = this.props;\n    onClickDelete(id);\n  }\n\n  render() {\n    return (\n      <div className=\"btnDel\" onClick={this.handleClickBtn} />\n    );\n  }\n}\n\nBtnDelete.propTypes = {\n  id: PropTypes.number.isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default BtnDelete;\n","import ItemTaskList from './ItemTaskList';\n\nexport default ItemTaskList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BtnDelete from '../BtnDelete';\nimport { ENTER_KEY_CODE } from '../../constants/constants';\nimport './style.css';\n\nclass ItemTaskList extends Component {\n  state = {\n    idEdit: 0,\n    valueBeforeEdit: '',\n  };\n\n  handleClickCheckbox = () => {\n    const { completeTodo, todolist } = this.props;\n    completeTodo(todolist.id);\n  }\n\n  handleKeyPress = (e) => {\n    const { deleteTodo, todolist, editTodo } = this.props;\n    if (e.keyCode === ENTER_KEY_CODE) {\n      e.preventDefault();\n      const text = e.target.value.trim();\n      if (text === '') return deleteTodo(todolist.id);\n      if (text !== '' && /\\S/.test(text)) {\n        e.target.value = '';\n        editTodo(todolist.id, text);\n        this.setState({\n          idEdit: 0,\n        });\n      }\n    }\n  }\n\n  handleInputBlur = (e) => {\n    const { deleteTodo, todolist, editTodo } = this.props;\n    const text = e.target.value.trim();\n    if (text === '') return deleteTodo(todolist.id);\n    e.target.value = '';\n    editTodo(todolist.id, text);\n    this.setState({\n      idEdit: 0,\n    });\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ valueBeforeEdit: e.target.value });\n  }\n\n  handleDoubleClick = () => {\n    const { todolist } = this.props;\n\n    this.setState({\n      idEdit: todolist.id,\n      valueBeforeEdit: todolist.title,\n    });\n  }\n\n  render() {\n    const { idEdit, valueBeforeEdit } = this.state;\n    const { todolist, deleteTodo } = this.props;\n    const { completed } = todolist;\n    const isEdit = (todolist.id === idEdit);\n\n    return (\n      <React.Fragment>\n        {isEdit ? (\n          <input\n            type=\"text\"\n            autoFocus\n            className=\"text-editing\"\n            value={valueBeforeEdit}\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleKeyPress}\n            onBlur={this.handleInputBlur}\n          />\n        ) : (\n          <div className=\"listItemWrapper\">\n            <input\n              type=\"checkbox\"\n              id={todolist.id}\n              checked={completed}\n              className=\"list-checkbox\"\n              onChange={this.handleClickCheckbox}\n            />\n            <label htmlFor={todolist.id} />\n            <span className=\"task-list_text\" onDoubleClick={this.handleDoubleClick}>{todolist.title}</span>\n            <BtnDelete onClickDelete={deleteTodo} id={todolist.id} />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nItemTaskList.propTypes = {\n  todolist: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n};\n\nexport default ItemTaskList;\n","export const reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n","import TaskList from './TaskList';\n\nexport default TaskList;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemTaskList from '../ItemTaskList';\nimport { reorder } from '../../constants/constantsFunc';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport './style.css';\n\nconst TaskList = (props) => {\n  const {\n    quicklyList,\n    usualList,\n    actions,\n  } = props;\n\n  const {\n    deleteTodo,\n    completeTodo,\n    editTodo,\n    updateListUsual,\n    updateListQuickly,\n  } = actions;\n\n  const quicklyListItem = quicklyList.map((item, index) => (\n    <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n      {(provided, snapshot) => (\n        <li\n          key={item.id}\n          className={snapshot.isDragging ? \"list-item draggedItem\" : \"list-item\"}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <ItemTaskList\n            todolist={item}\n            deleteTodo={deleteTodo}\n            completeTodo={completeTodo}\n            editTodo={editTodo}\n          />\n        </li>\n      )}\n    </Draggable>\n  ));\n\n  const usualListItem = usualList.map((item, index) => (\n    <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n      {(provided, snapshot) => (\n        <li\n          key={item.id}\n          className={snapshot.isDragging ? \"list-item draggedItem\" : \"list-item\"}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <ItemTaskList\n            todolist={item}\n            deleteTodo={deleteTodo}\n            completeTodo={completeTodo}\n            editTodo={editTodo}\n          />\n        </li>\n      )}\n    </Draggable>\n  ));\n\n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n    \n  };\n\n  const getList = id => id === 'droppable1' ? props.usualList : props.quicklyList;\n  const emptyListText = <li><p className='emptyListText'>Тут ничего нет</p></li>;\n  const onDragEnd = result => {\n    const { source, destination } = result;\n\n    if (!destination) {\n        return;\n    }\n    if (source.droppableId === destination.droppableId && source.droppableId === 'droppable1') {\n      const items = reorder(\n          usualList,\n          source.index,\n          destination.index\n      );\n      updateListUsual(items);\n    }\n    if (source.droppableId === destination.droppableId && source.droppableId === 'droppable2') {\n      const items = reorder(\n          quicklyList,\n          source.index,\n          destination.index\n      );\n        updateListQuickly(items);\n    }\n    if (source.droppableId !== destination.droppableId) {\n      const result = move(\n          getList(source.droppableId),\n          getList(destination.droppableId),\n          source,\n          destination\n      );\n      updateListQuickly(result.droppable2);\n      updateListUsual(result.droppable1);\n    }\n  };\n  return (\n    <Fragment>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable1\">\n        {(provided, snapshot) => (\n        <ul\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          className=\"main__task-list\"\n        >\n          {usualListItem.length === 0 ? emptyListText : usualListItem}\n          {provided.placeholder}\n        </ul>\n        )}\n        </Droppable>\n        <Droppable droppableId=\"droppable2\">\n        {(provided, snapshot) => (\n        <ul\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          className=\"main__task-list\"\n        >\n          {quicklyListItem.length === 0 ? emptyListText : quicklyListItem}\n          {provided.placeholder}\n        </ul>\n        )}\n        </Droppable>\n      </DragDropContext>\n    </Fragment>\n    );\n};\n\nTaskList.propTypes = {\n  isCheckedExists: PropTypes.bool.isRequired,\n  countActiveItem: PropTypes.number.isRequired,\n  quicklyList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  usualList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  actions: PropTypes.object.isRequired,\n};\n\nexport default TaskList;\n","import { createSelector } from 'reselect';\n\nconst getTodosUsual = (state) => state.todoUsual;\nconst getTodosQuickly = (state) => state.todoQuickly;\n\nexport const getcountActiveItem = createSelector(\n  [getTodosUsual],\n  todoUsual => {\n    return (todoUsual.filter(itemList => !itemList.completed)).length;\n  },\n);\n\nexport const isCheckedExists = createSelector(\n  [getTodosUsual],\n  todoUsual => {\n    return (todoUsual.filter(itemList => itemList.completed)).length !== 0;\n  },\n);\n\nexport const getCurrentId = createSelector(\n  [getTodosUsual, getTodosQuickly],\n  (todoUsual,todoQuickly) => {\n    let maxtodoUsual = todoUsual.length !== 0 ? (todoUsual.reduce((acc, curr) => acc.id > curr.id ? acc : curr)).id : 0;\n    let maxtodoQuickly = todoQuickly.length !== 0 ? (todoQuickly.reduce((acc, curr) => acc.id > curr.id ? acc : curr)).id : 0;\n    return Math.max(maxtodoUsual, maxtodoQuickly);\n  },\n);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as TodoActions from '../actions';\nimport TaskList from '../components/TaskList';\nimport { getcountActiveItem, isCheckedExists } from '../selectors';\n\nconst mapStateToProps = state => ({\n  todoList: state.todoUsual,\n  countActiveItem: getcountActiveItem(state),\n  isCheckedExists: isCheckedExists(state),\n  quicklyList: state.todoQuickly,\n  usualList: state.todoUsual,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskList);\n","import Main from './Main';\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from '../Textarea';\nimport BtnSelectAll from '../BtnSelectAll';\nimport TaskList from '../../containers/TaskList';\nimport './style.css';\n\nconst Main = (props) => {\n  const {\n    usualList,\n    quicklyList,\n    isOpen,\n    currentId,\n    actions,\n  } = props;\n\n  const {\n    addTodo,\n    completeAllTodos,\n  } = actions;\n\n  const countActiveItem =\n  usualList.filter(itemList => !itemList.completed).length +\n  quicklyList.filter(itemList => !itemList.completed).length;\n  return (\n    <div className=\"main\">\n      <div className=\"main__header\">\n        {isOpen && (\n          <BtnSelectAll\n            completeAllTodos={completeAllTodos}\n            isAllChecked={countActiveItem === 0}\n          />\n        )}\n        <Textarea addTodo={addTodo} itemId={currentId} />\n      </div>\n      <div className=\"TaskListWrapper\">{isOpen && <TaskList />}</div>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  usualList: PropTypes.array.isRequired,\n  quicklyList: PropTypes.array.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  currentId: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired,\n};\n\nexport default Main;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as TodoActions from '../actions';\nimport Main from '../components/Main';\nimport { getCurrentId } from '../selectors';\n\nconst mapStateToProps = state => ({\n  isOpen: state.todoUsual.length !== 0 || state.todoQuickly.length !== 0,\n  currentId: getCurrentId(state),\n  quicklyList: state.todoQuickly,\n  usualList: state.todoUsual,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Main);\n","import React from 'react';\nimport Header from '../Header';\nimport Main from '../../containers/Main';\nimport './style.css';\n\nfunction App() {\n  return (\n    <section className=\"todo-Page\">\n      <Header />\n      <Main />\n    </section>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import {\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  UPDATE_LIST_QUICKLY,\n} from '../constants/ActionTypes';\n\nconst initialState = localStorage.getItem('todoApp-redux')\n  ? JSON.parse(localStorage.getItem('todoApp-redux')).todoQuickly\n  : [];\n\nexport default function todoQuickly(state = initialState, action) {\n  switch (action.type) {\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.id);\n\n    case COMPLETE_ALL_TODOS: {\n      const areAllMarked = state.every(todo => todo.completed);\n      return state.map(todo => ({\n        ...todo,\n        completed: !areAllMarked,\n      }));\n    }\n\n    case EDIT_TODO:\n      return state.map(todo => (todo.id === action.id\n        ? { ...todo, title: action.text }\n        : todo));\n\n    case COMPLETE_TODO:\n      return state.map(todo => (todo.id === action.id\n        ? { ...todo, completed: !todo.completed }\n        : todo));\n\n    case UPDATE_LIST_QUICKLY:\n      return action.list;\n      \n    default:\n      return state;\n  }\n}\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  COMPLETE_TODO,\r\n  COMPLETE_ALL_TODOS,\r\n  UPDATE_LIST_USUAL,\r\n} from '../constants/ActionTypes';\r\n\r\nconst initialState = localStorage.getItem('todoApp-redux')\r\n  ? JSON.parse(localStorage.getItem('todoApp-redux')).todoUsual\r\n  : [];\r\n\r\nexport default function todoUsual(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.task];\r\n\r\n    case DELETE_TODO:\r\n      return state.filter(todo => todo.id !== action.id);\r\n\r\n    case COMPLETE_ALL_TODOS: {\r\n      const areAllMarked = state.every(todo => todo.completed);\r\n      return state.map(todo => ({\r\n        ...todo,\r\n        completed: !areAllMarked,\r\n      }));\r\n    }\r\n\r\n    case EDIT_TODO:\r\n      return state.map(todo => (todo.id === action.id\r\n        ? { ...todo, title: action.text }\r\n        : todo));\r\n\r\n    case COMPLETE_TODO:\r\n      return state.map(todo => (todo.id === action.id\r\n        ? { ...todo, completed: !todo.completed }\r\n        : todo));\r\n\r\n    case UPDATE_LIST_USUAL:\r\n      return action.list;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\n\nimport todoQuickly from './ToDoListQuickly';\nimport todoUsual from './ToDoListUsual';\n\nexport default combineReducers({\n  todoUsual,\n  todoQuickly,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport reducer from './reducers';\nimport './index.css';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__\n  && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst update = () => {\n  localStorage.setItem('todoApp-redux', JSON.stringify(store.getState()));\n};\n\nstore.subscribe(update);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}